---
title: "Presentation Exercise"
format: html
---

# Data Presentation Exercise: Weâ€™ve Never Seen Congressional Resignations Like This Before

For this exercise, I will find publicly available data from news sources and try to replicate one of their figures or tables. This article from ABC News 538 discusses trends in the reasons behind members of congress' resignations, and can be found at the following [link](https://fivethirtyeight.com/features/more-people-are-resigning-from-congress-than-at-any-time-in-recent-history/).

## Replicating a Figure

The figure from this article I have chosen to replicate is shown below: ![figure](Congressional_Resignations.png)

The figure is a stacked bar graph showing the distribution of reasons for congressional resignations in each term from the 57th Congress to the 115th Congress in years ranging from 1901 to 2018.

```{r}
#Load required packages
library(here)
library(ggplot2)
library(tidyverse)
library(grid)
```

```{r}
#Load data
data_path <- here("presentation-exercise", "congressional_resignations.csv")
data <- read_csv(data_path)

#Get data structure and summary
str(data)
summary(data)
```

The following code for reproducing the figure was generated by ChatGPT following the prompt, "Using the data in the attached csv file, write code in R to reproduce the attached graph." A png screenshot of the figure and the data in a csv file were provided as input along with the prompt.

```{r, message = FALSE, warning = FALSE}
df <- data

# Convert Congress to numeric
df$Congress <- as.numeric(gsub("th|rd|nd|st", "", df$Congress))

# Define category color mapping
category_colors <- c(
  "OTHER OFFICE" = "#FFC72C",
  "PRIVATE SECTOR" = "#007CC3",
  "EARLY DEPARTURE" = "#8B5E83",
  "SEXUAL MISCONDUCT" = "#E81D2C",
  "ELECTION OVERTURNED" = "#1D1D1D",
  "HEALTH/FAMILY" = "#509E2F",
  "MILITARY SERVICE" = "#A05A2C",
  "CONSENSUAL SEX SCANDALS" = "#FFB6C1",
  "OTHER SCANDAL" = "#D3D3D3",
  "OTHER REASON" = "#BEBEBE"
)

# Aggregate data for plotting
df_plot <- df %>%
  count(Congress, Category) %>%
  filter(!is.na(Congress))

# Create stacked bar plot
ggplot(df_plot, aes(x = Congress, y = n, fill = Category)) +
  geom_bar(stat = "identity") +
  scale_fill_manual(values = category_colors) +
  labs(
    title = "Congressional resignations over time",
    subtitle = "Number of congressional resignations by session and public reason for resignation since 1901",
    x = "Congress",
    y = "Number of Resignations",
    fill = "Reason"
  ) +
  theme_minimal()

```

The bars themselves are correct, but many other elements are missing. The colors aren't there, the theme doesn't match the original, and there's no legend.

```{r, message = FALSE, warning = FALSE}
#Separate rows with multiple reported reasons for resignation
df <- df %>%
  separate_rows(Category, sep = " & ") %>%
  mutate(across(where(is.character), str_trim)) #Remove any possible white space

# Define category code mapping
df <- df %>%
  mutate(Category = case_when(
    Category == "X" ~ "SEXUAL MISCONDUCT",
    Category == "A" ~ "CONSENSUAL SEX SCANDALS",
    Category == "B" ~ "OTHER SCANDAL",
    Category == "C" ~ "OTHER OFFICE",
    Category == "D" ~ "PRIVATE SECTOR",
    Category == "E" ~ "HEALTH/FAMILY",
    Category == "F" ~ "OTHER REASON",
    Category == "G" ~ "EARLY DEPARTURE",
    Category == "H" ~ "MILITARY SERVICE",
    Category == "I" ~ "ELECTION OVERTURNED",
    TRUE ~ NA_character_
  ))

#Define category color mapping
category_colors <- c(
  "OTHER OFFICE" = "#F5B902",
  "ELECTION OVERTURNED" = "#1D1D1D",
  "PRIVATE SECTOR" = "#038FD5",  
  "HEALTH/FAMILY" = "#44AB43",
  "EARLY DEPARTURE" = "#AE66AB",  
  "MILITARY SERVICE" = "#A4522E",
  "SEXUAL MISCONDUCT" = "#E81D2C",
  "CONSENSUAL SEX SCANDALS" = "#FFB6C1",
  "OTHER SCANDAL" = "#FFE3D7",
  "OTHER REASON" = "#BEBEBE"
)

#Ensure stacking order in the correct sequence
df$Category <- factor(df$Category, levels = names(category_colors))

#Aggregate data for plotting
df_plot <- df %>%
  count(Congress, Category) %>%
  filter(!is.na(Congress))
```

```{r, message = FALSE, warning = FALSE}
#Replot
ggplot(df_plot, aes(x = Congress, y = n, fill = Category)) +
  geom_bar(stat = "identity", position = position_stack(reverse = TRUE)) + #Specifify stacked bar graph
  scale_fill_manual(values = category_colors) + #Fill with colors as defined above
  scale_x_continuous(breaks = seq(60, 115, by = 5), expand = c(0.01, 0.01)) + #X-axis formatting
  scale_y_continuous(breaks = seq(0, 40, by = 10)) + #Y-axis formatting
  #Make figure, axis titles
  labs(
    title = "Congressional resignations over time",
    subtitle = "Number of congressional resignations by session and public reason for resignation since 1901",
    x = "Congress",
    y = " ",
    fill = "Category"
  ) +
  theme_minimal() +
  theme(
    plot.title = element_text(hjust = 0.5, face = "bold"), #Format plot title
    plot.subtitle = element_text(hjust = 0.5), #Format plot subtitle
    legend.position = "top", #Specify legend position
    legend.title = element_blank(), #No legend title
    legend.text = element_text(size = 7), #Format legend text
    legend.key.size = unit(0.3, "cm"), #Format legend keys
    legend.spacing.x = unit(0.5, "cm"), #Format legend spacing left to right
    legend.spacing.y = unit(0.3, "cm"), #Format legend spacign top to bottom
    legend.box = "horizontal", #Format legend orientation (vertical vs. horizontal)
    legend.direction = "horizontal", #Format lengend orientation (vertical vs. horizontal)
    legend.box.just = "center", #Format legend justification
    axis.title.x = element_text(size = 12, face = "bold"), #Format x axis title
    axis.text.x = element_text(size = 10, family = "Courier New", color = "grey40"), #Format x-axis text
    axis.text.y = element_text(size = 10, family = "Courier New", color = "grey40"), #Format y-axis text
    panel.grid.major.x = element_blank(), #Remove vertical grid lines
    panel.grid.minor.x = element_blank(), #Remove intermediate vertical grid lines
    panel.grid.minor.y = element_blank() #Remove intermediate horizontal grid loines
  ) + 
  guides(fill = guide_legend(ncol = 5, bycol = TRUE)) + #Make legend a 5x2 box
 
  #Annotations
  #World War II
  annotate("rect", xmin = 76.6, xmax = 77.4, ymin = 15, ymax = 19,
           color = "black", fill = NA, size = 0.3) +
  annotate("rect", xmin = 77.6, xmax = 78.4, ymin = 7, ymax = 15,
           color = "black", fill = NA, size = 0.3) +
  annotate("label", x = 75, y = 22, label = "World War II", hjust = 0, angle = 0,
           fill = "white", label.size = NA, family = "Arial", size = 2.5) +
  annotate("curve", x = 78, xend = 78, y = 21, yend = 17, 
           arrow = arrow(length = unit(0.1, "cm"), type = "closed"),
           size = 0.25, curvature = -0.4) +
  
  #Changes to pension laws
  annotate("rect", xmin = 88.6, xmax = 89.4, ymin = 5, ymax = 16, 
           color = "black", fill = NA, size = 0.2) +
  annotate("rect", xmin = 92.6, xmax = 93.4, ymin = 7, ymax = 42, 
           color = "black", fill = NA, size = 0.2) +
  annotate("rect", xmin = 94.6, xmax = 95.4, ymin = 7, ymax = 25, 
           color = "black", fill = NA, size = 0.2) +
  annotate("label", x = 89, y = 21, label = paste("Changes to", "pension laws", sep = "\n"),
           hjust = 0.5, angle = 0, fill = "white", label.size = NA, family = "Arial", size = 2.5) +
  annotate("curve", x = 90, xend = 90, y = 18, yend = 14, 
           arrow = arrow(length = unit(0.1, "cm"), type = "closed"),
           size = 0.25, curvature = -0.4) +
  annotate("curve", x = 89.5, xend = 92, y = 23, yend = 28, 
           arrow = arrow(length = unit(0.1, "cm"), type = "closed"),
           size = 0.25, curvature = -0.4) +
  annotate("curve", x = 89.5, xend = 94, y = 23, yend = 24,
           arrow = arrow(length = unit(0.1, "cm"), type = "closed"),
           size = 0.25, curvature = -0.2) +
  
  #Abscam scandal
  annotate("rect", xmin = 95.6, xmax = 96.4, ymin = 6, ymax = 11, 
           color = "black", fill = NA, size = 0.2) +
  annotate("rect", xmin = 96.6, xmax = 97.4, ymin = 5, ymax = 8, 
           color = "black", fill = NA, size = 0.2) +
  annotate("label", x = 97, y = 15, label = paste("Abscam", "scandal", sep = "\n"),
           hjust = 0, angle = 0, fill = "white", label.size = NA, family = "Arial", size = 2.5) +
  annotate("curve", x = 99, xend = 97, y = 13, yend = 11, 
           arrow = arrow(length = unit(0.1, "cm"), type = "closed"),
           size = 0.25, curvature = -0.4) +
  annotate("curve", x = 99, xend = 98, y = 13, yend = 9,
           arrow = arrow(length = unit(0.1, "cm"), type = "closed"),
           size = 0.25, curvature = -0.2) +
  
  #Abramoff scandal
  annotate("rect", xmin = 107.6, xmax = 108.4, ymin = 5, ymax = 7, 
           color = "black", fill = NA, size = 0.2) +
  annotate("label", x = 109, y = 13, label = paste("Abramoff", "scandal", sep = "\n"),
           hjust = 1, angle = 0, fill = "white", label.size = NA, family = "Arial", size = 2.5) +
  annotate("curve", x = 108, xend = 108, y = 11, yend = 8, 
           arrow = arrow(length = unit(0.1, "cm"), type = "closed"),
           size = 0.25, curvature = 0) +
  
  ##MeToo
  annotate("rect", xmin = 114.6, xmax = 115.4, ymin = 8, ymax = 11, 
           color = "black", fill = NA, size = 0.2) +
  annotate("label", x = 116, y = 20, label = "#MeToo", hjust = 1, angle = 0, fill = "white", 
           label.size = NA, family = "Arial", size = 2.5) +
  annotate("curve", x = 115, xend = 115, y = 19, yend = 13, 
           arrow = arrow(length = unit(0.1, "cm"), type = "closed"),
           size = 0.25, curvature = 0) +
  
  #y-axis label
  annotate("label", x = -Inf, y = 40, label = "resignations", hjust = 0, angle = 0, 
           fill = "white", label.size = NA, family = "Courier New", 
           color = "darkgrey", size = 3.5)

```

## Making a Presentation-Quality Table

In making a presentation quality table, I will use the same data to create a heat map of the reasons for congressional resignations by state.

```{r, message=FALSE, warning=FALSE}
#Additional packages
library(formattable)
library(gt)
library(webshot2)
```

```{r, results = 'asis', message = FALSE, warning = FALSE}
#Split district column
df2 <- df %>%
  separate(District, c("State", "District"), sep = "-")

#Create a summary table by counts
summary_table <- df2 %>%
  group_by(State, Category) %>%
  summarise(Count = n()) %>%
  spread(key = Category, value = Count, fill = 0)

#Calculate total resignations by state
summary_table <- summary_table %>%
  ungroup() %>%
  mutate(across(where(is.numeric), as.numeric)) %>%
  rowwise() %>%
  mutate(TOTAL = sum(across(where(is.numeric)), na.rm = TRUE)) %>%
  ungroup()

#Create gt table
gt_table <- summary_table %>%
  gt() %>%
  tab_header(
    title = "Congressional Resignations by State and Category"
  ) %>%
  fmt_number(
    columns = -State,
    decimals = 0
  ) %>%
  cols_label(
    `OTHER OFFICE` = "Other Office",
    `ELECTION OVERTURNED` = "Election Over- turned",
    `PRIVATE SECTOR` = "Private Sector",
    `HEALTH/FAMILY` = "Health/ Family",
    `EARLY DEPARTURE` = "Early Departure",
    `MILITARY SERVICE` = "Military Service",
    `SEXUAL MISCONDUCT` = "Sexual Misconduct",
    `CONSENSUAL SEX SCANDALS` = "Consensual Sex Scandals",
    `OTHER SCANDAL` = "Other Scandal",
    `OTHER REASON` = "Other Reason",
    `TOTAL` = "Total"
  ) %>%
  data_color(
    columns = `OTHER OFFICE`,
    fn = scales::col_numeric(
      palette = c("white", "#F5B902"),
      domain = NULL
    )
  ) %>%
  data_color(
    columns = `ELECTION OVERTURNED`,
    fn = scales::col_numeric(
      palette = c("white", "grey20"),
      domain = NULL
    )
  ) %>%
  data_color(
    columns = `PRIVATE SECTOR`,
    fn = scales::col_numeric(
      palette = c("white", "#038FD5"),
      domain = NULL
    )
  ) %>%
  data_color(
    columns = `HEALTH/FAMILY`,
    fn = scales::col_numeric(
      palette = c("white", "#44AB43"),
      domain = NULL
    )
  ) %>%
  data_color(
    columns = `EARLY DEPARTURE`,
    fn = scales::col_numeric(
      palette = c("white", "#AE66AB"),
      domain = NULL
    )
  ) %>%
  data_color(
    columns = `MILITARY SERVICE`,
    fn = scales::col_numeric(
      palette = c("white", "#A4522E"),
      domain = NULL
    )
  ) %>%
  data_color(
    columns = `SEXUAL MISCONDUCT`,
    fn = scales::col_numeric(
      palette = c("white", "#E81D2C"),
      domain = NULL
    )
  ) %>%
  data_color(
    columns = `CONSENSUAL SEX SCANDALS`,
    fn = scales::col_numeric(
      palette = c("white", "#FFB6C1"),
      domain = NULL
    )
  ) %>%
  data_color(
    columns = `OTHER SCANDAL`,
    fn = scales::col_numeric(
      palette = c("white", "#FFE3D7"),
      domain = NULL
    )
  ) %>%
  data_color(
    columns = `OTHER REASON`,
    fn = scales::col_numeric(
      palette = c("white", "#BEBEBE"),
      domain = NULL
    )
  ) %>%
  data_color(
    columns = `TOTAL`,
    fn = scales::col_numeric(
      palette = c("white", "orange"),
      domain = NULL
    )
  ) %>%
  tab_footnote(
    footnote = "Colors within each column correspond to the representative colors in the stacked bargraph representation. Darker shades within each column correspond to higher counts.",
  )

#Save gt table as an image
gtsave(gt_table, "state_resignations_table.png", expand = 10)
```

{{< pagebreak >}}

The resulting table is shown below. ![](state_resignations_table.png)
