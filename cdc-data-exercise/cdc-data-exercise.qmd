---
title: "CDC Data Exercise"
editor: visual
---

## Part 1

The data that I have chosen for this exercise is the NWSS Public SARS-CoV-2 Wastewater Metric Data from the CDC. The link to the website can be found [here](https://data.cdc.gov/Public-Health-Surveillance/NWSS-Public-SARS-CoV-2-Wastewater-Metric-Data/2ew6-ywp6/about_data). ChatGPT and GitHub Copilot were both used to fine-tune the code below.

```{r}
#Load required packages
library(tidyverse)
library(here)
library(ggplot2)
library(janitor)
```

This dataset was initially too big to fit within Git's file size guidelines. To reduce file size, I cut some redundant variables as well as restricted the data to only include observations from 2023 and 2024.

```{r}
#Code to reduce data to acceptable size for Git
#data_path <- here("cdc-data-exercise", "NWSS_Public_SARS-CoV-2_Wastewater_Metric_Data_20250206.csv")
#ww <- read_csv(data_path)
#ww <- ww %>%
  #select(!c(key_plot_id, sample_location_specify, reporting_jurisdiction)) %>% 
  #filter(date_start >= as.Date("2023-01-01") & date_start <= as.Date("2024-12-31"))
#write.csv(ww, 'wastewater.csv', row.names = FALSE)
```

```{r}
#Load dataset
data_path <- here("cdc-data-exercise", "wastewater.csv")
df <- read_csv(data_path)
skimr::skim(df)

```

```{r}
#Data cleaning

#Convert dates from characters to Date type
df <- df %>%
  mutate(
    date_start = as.Date(date_start, format="%Y-%m-%d"),
    date_end = as.Date(date_end, format="%Y-%m-%d"),
    first_sample_date = as.Date(first_sample_date, format="%Y-%m-%d")
  )

#Handle missing values
df <- df %>%
  replace_na(list(ptc_15d = 0, detect_prop_15d = 0, percentile = 0))

#Convert categorical variables to factors
df <- df %>%
  mutate(
    wwtp_jurisdiction = as.factor(wwtp_jurisdiction),
    sample_location = as.factor(sample_location),
    county_names = as.factor(county_names),
    county_fips = as.factor(county_fips),
    sampling_prior = as.factor(sampling_prior)
  )

str(df)
summary(df)
```

```{r}
#Exploratory Data Analysis

#Names of categorical variables
categorical_vars <- c("wwtp_jurisdiction", "sample_location", "county_names", "county_fips", "sampling_prior")

#Summary of categorical variables
for (var in categorical_vars) {
  summary_table <- df %>%
    count(!!sym(var)) %>%
    mutate(Percent = n / sum(n) * 100)
  
  write_csv(summary_table, paste0(var, "_summary.csv"))
}

#Names of continuous variables
continuous_vars <- df %>%
  select(population_served, ptc_15d, detect_prop_15d, percentile)

for (var in names(continuous_vars)) {
  summary_table <- continuous_vars %>%
    summarise(
      Variable = var,
      Mean = mean(.data[[var]], na.rm = TRUE),
      SD = sd(.data[[var]], na.rm = TRUE),
      Min = min(.data[[var]], na.rm = TRUE),
      Max = max(.data[[var]], na.rm = TRUE),
      Median = median(.data[[var]], na.rm = TRUE)
    )
  write_csv(summary_table, paste0(var, "_summary.csv"))
}

detect_prop_15d_summary <- read_csv("detect_prop_15d_summary.csv")
percentile_summary <- read_csv("percentile_summary.csv")
population_served_summary <- read_csv("population_served_summary.csv")
ptc_15d_summary <- read_csv("ptc_15d_summary.csv")

continuous_summary <- rbind(detect_prop_15d_summary, percentile_summary, population_served_summary, ptc_15d_summary)

write_csv(continuous_summary, "continuous_summary.csv")

summary(df$ptc_15d)
```

```{r}
#Plot distributions of continuous variables
ggplot(df, aes(x = population_served)) +
  geom_histogram(binwidth = 1000, fill = "blue", color = "blue") +
  labs(title = "Distribution of Population Served", x = "Population Served", y = "Frequency")

ggplot(df, aes(x = ptc_15d)) +
  geom_histogram(fill = "green", color = "green") +
  xlim(-100, 100) +
  labs(title = "Distribution of PTC 15d", x = "PTC 15d", y = "Frequency")

ggplot(df, aes(x = detect_prop_15d)) +
  geom_histogram(binwidth = 10, fill = "red", color = "red") +
  labs(title = "Distribution of Detect Prop 15d", x = "Detect Prop 15d", y = "Frequency")

ggplot(df, aes(x = percentile)) +
  geom_histogram(binwidth = 5, fill = "purple", color = "purple") +
  labs(title = "Distribution of Percentile", x = "Percentile", y = "Frequency")

#Save plots
ggsave("population_served_distribution.png")
ggsave("ptc_15d_distribution.png")
ggsave("detect_prop_15d_distribution.png")
ggsave("percentile_distribution.png")

#Plot distributions of categorical variables
ggplot(df, aes(x = wwtp_jurisdiction)) +
  geom_bar(fill = "blue") +
  theme(axis.text.x = element_text(angle = 60, hjust = 1)) +
  labs(title = "Distribution of wwtp_jurisdiction",
       x = "wwtp_jurisdiction",
       y = "count")

ggplot(filter(df, wwtp_jurisdiction == "Georgia"), aes(x = county_names)) +
  geom_bar(fill = "green") +
  theme(axis.text.x = element_text(angle = 60, hjust = 1)) +
  labs(title = "Distribution of counties in Georgia",
       x = "counties",
       y = "count")

ggplot(df, aes(x = sample_location)) +
  geom_bar(fill = "red") +
  theme(axis.text.x = element_text(angle = 0.5, hjust = 0.5)) +
  labs(title = "Distribution of sample_location",
       x = "sample location",
       y = "count")

ggplot(df, aes(x = sampling_prior)) +
  geom_bar(fill = "purple") +
  theme(axis.text.x = element_text(angle = 0.5, hjust = 0.5)) +
  labs(title = "Distribution of sampling_prior",
       x = "prior sampling",
       y = "count")

ggsave("jurisdiction_distribution.png")
ggsave("georgia_counties_distribution.png")
ggsave("sample_location_distribution.png") 
ggsave("sampling_prior_distribution.png")
```

#### The following section was contributed by Alexis!

```{r}
#some additional exploration

unique(df$wwtp_jurisdiction)
```

```{r}
unique(df$county_names)
```

```{r}
#Utilizing the summary table provided I will create synthetic data for each of the 13 variables
#First I will define the number of obs.
n_rows<- 773779
```

```{r}
# Load necessary libraries
library(dplyr)
library(tidyr)

# Define the number of rows for the synthetic dataset
n_rows <- 773779

# Generate synthetic data for each variable
set.seed(123)  # For reproducibility

# 1. wwtp_jurisdiction (categorical variable)
# Include all 50 states and the District of Columbia
states <- c("Alabama", "Alaska", "Arizona", "Arkansas", "California", "Colorado", 
            "Connecticut", "Delaware", "Florida", "Georgia", "Hawaii", "Idaho", 
            "Illinois", "Indiana", "Iowa", "Kansas", "Kentucky", "Louisiana", 
            "Maine", "Maryland", "Massachusetts", "Michigan", "Minnesota", 
            "Mississippi", "Missouri", "Montana", "Nebraska", "Nevada", 
            "New Hampshire", "New Jersey", "New Mexico", "New York", 
            "North Carolina", "North Dakota", "Ohio", "Oklahoma", "Oregon", 
            "Pennsylvania", "Rhode Island", "South Carolina", "South Dakota", 
            "Tennessee", "Texas", "Utah", "Vermont", "Virginia", "Washington", 
            "West Virginia", "Wisconsin", "Wyoming", "District of Columbia")

# Use the same proportions as in the original data (adjust probabilities as needed)
wwtp_jurisdiction <- sample(states, size = n_rows, replace = TRUE, 
                            prob = c(rep(0.02, 50), 0.01))  # Adjust probabilities as needed

# 2. wwtp_id (numeric variable)
# Use a uniform distribution with the same min and max as the original data
wwtp_id <- sample(1:2939, size = n_rows, replace = TRUE)

# 3. sample_location (categorical variable)
# Use the same proportions as in the original data
sample_location <- sample(c("Before treatment plant", "Treatment plant"), 
                          size = n_rows, replace = TRUE, prob = c(0.046, 0.954))  # Adjust probabilities as needed

# 4. county_names 
# Use the provided list of 655 counties
county_names <- c("Maricopa", "Ottawa", "Dallas", "Kalamazoo", "Butler", "Penobscot", "Bergen", 
                  "Cumberland", "Delaware", "Muskogee", "Virginia Beach City,Chesapeake City", 
                  "Marathon", "Summit", "Queens", "Dauphin", "Tazewell", "Island,Snohomish", 
                  "Ohio", "Santa Cruz", "Saint Clair", "Sullivan", "Chautauqua", "Pinellas", 
                  "Honolulu", "Du Page", "Anne Arundel", "Salem", "Riverside", "Cole,Callaway", 
                  "Westchester", "Multnomah", "Umatilla", "La Crosse", "Dunn", "Lafayette", 
                  "Addison", "Mohave", "Marion", "Otsego", "Durham,Orange", "New Hanover", 
                  "Forsyth", "Allegheny", "Los Angeles", "San Francisco,San Mateo", "Monmouth", 
                  "Bristol", "Butte", "St Joseph", "Vanderburgh", "Huron", "Skagit", "Santa Clara", 
                  "Hamilton", "Saint Louis", "Knox", "Hampton", "Horry", "El Paso", "Kane", 
                  "Terrebonne", "Union", "Genesee", "Isanti", "Albany", "Pierce", "Salt Lake", 
                  "Sonoma", "Orange", "Boone", "Jefferson", "Mecklenburg", "Erie", "Yamhill", 
                  "El Dorado", "Shawnee", "Fulton", "Cache", "Fairfax,Alexandria City", "Yakima", 
                  "Clayton", "Seneca", "Newport", "Milwaukee,Ozaukee", "Somerset", "Contra Costa", 
                  "Ouachita", "Suffolk,Middlesex", "Sandusky", "Portsmouth City,Isle Of Wight,Chesapeake City,Suffolk City", 
                  "Cabell", "Mason", "Greene", "Lincoln", "Santa Barbara", "Dunklin", "Lancaster", 
                  "Utah", "Carson City", "Niagara", "Ontario", "Saint Tammany", "Grafton", 
                  "Columbia", "Dutchess", "Pontotoc", "Clark", "Sumter", "Houston", "Vigo", 
                  "Saint Mary", "Essex", "Hill", "Wake", "Lawrence", "Georgetown", "San Juan,Grand", 
                  "Walworth", "Milwaukee,Ozaukee,Racine,Waukesha,Washington", "Mineral", 
                  "Orleans", "Goodhue", "Pulaski", "Yuma", "Pima", "La Plata", "Elkhart", 
                  "Suffolk,Middlesex,Norfolk", "Kent", "Gratiot", "Rensselaer", "Providence", 
                  "De Kalb", "Chippewa", "Eaton", "Johnson", "Hardin", "Pender,Duplin", 
                  "Washington", "Broward", "Marquette", "Hennepin", "Clay", "Monroe", "Wyandot", 
                  "King,Snohomish", "Noble", "Suffolk", "Fairfield", "Snohomish", "Burlington", 
                  "Wyoming", "Philadelphia", "Arapahoe,Adams", "New Castle", "La Salle", 
                  "Scott,New Madrid", "Otero", "Schenectady", "Saint Lawrence", "Andrews", 
                  "Kanawha", "Travis", "Wayne", "Sussex", "Rockingham", "Centre", 
                  "Bedford City,Lynchburg City,Amherst,Bedford,Campbell", "Randolph", "Plumas", 
                  "Muskegon", "Nobles", "Montgomery", "Chelan", "Boulder", "Grand Traverse", 
                  "Kewaunee,Brown", "Madison", "Houghton", "Park", "Payne", 
                  "Hampton City,Newport News City,York,James City", "Richmond", "Macon", 
                  "Miami-Dade", "Carlton,Saint Louis", "Onslow", "Marin", "Acadia", "Aroostook", 
                  "Kings", "Stafford", "Hampton City,Newport News City", "San Luis Obispo", 
                  "Jackson", "Tompkins", "Livingston", "Webb", "Sangamon", "Bienville", 
                  "Preston", "Rock", "Shelby", "Platte,Clay", "Schoharie", "Benton", "Macomb", 
                  "Mahoning", "Guilford", "Mclennan", "Douglas", "Sheridan", "Jessamine", 
                  "Warren", "Laramie", "Catoosa,Walker,Dade,Hamilton", "Lee", "Solano", 
                  "Fairfax,Prince Georges,District Of Columbia,Loudoun,Montgomery,Arlington", 
                  "Winnebago", "Marshall", "Buncombe,Henderson", "Cheshire", "Kershaw", 
                  "Harris", "King,Pierce", "Isabella", "Stanislaus", "Arenac", "Chemung", 
                  "Mercer", "Nueces", "New Haven", "Vernon", "Jackson,Cass", "Bryan", 
                  "Hunterdon", "Lorain", "Cook", "Tippecanoe", "Calloway", "Garland", 
                  "Franklin", "Carbon", "Caddo", "York", "Outagamie,Winnebago,Calumet", 
                  "Martinsville City,Henry", "East Feliciana", "Brown", "Shasta", "Oswego", 
                  "Otter Tail", "Middlesex,Somerset,Union", "Oneida", "Lane", "Weber,Davis", 
                  "Kenosha", "Schoolcraft", "Saginaw", "Rockland", "Hawaii", "Tuscaloosa", 
                  "Le Sueur,Scott", "Henry", "Tarrant", "Fond Du Lac", "Sherburne,Benton,Stearns", 
                  "Juneau", "Warrick", "Lewis And Clark", "Josephine", "Victoria", "Iroquois", 
                  "Champaign", "Lake", "Boyd", "Nassau", "Deschutes", "Greenwood", "Alachua", 
                  "Lucas", "Saint Marys", "Napa", "Mcdonough", "Calhoun", "Island", "Bulloch", 
                  "Clare", "Lyon", "Henderson", "Washtenaw", "Weld", "Hudson", "Kendall", 
                  "Vermilion", "Richland", "Sherburne", "Loudoun", "Coconino", "Peoria", 
                  "Tulsa", "Klamath", "Muscatine", "Oakland,Wayne", "Johnson,Jackson,Cass", 
                  "Dent", "Nemaha", "Cabell,Wayne", "Windsor", "Concordia", "Saratoga", 
                  "Clackamas", "Alameda", "Oxford", "San Diego", "Jasper", "Dickinson", 
                  "Northampton,Halifax", "Strafford", "Morris", "Portage", "Sarasota", 
                  "Leon", "Waupaca", "Perry", "Reno", "Ulster", "Hidalgo", 
                  "Bedford City,Botetourt,Roanoke,Bland,Salem,Roanoke City,Bedford", 
                  "Lenoir", "Platte", "Licking", "Ada", "Waldo", "Bay", "Le Sueur", 
                  "Monongalia", "Emmet", "Newport News City,York,New Kent,Williamsburg City,James City", 
                  "Sweetwater", "Yankton", "Martin,Palm Beach", "Westmoreland", "Mckean", 
                  "Norton City,Wise", "Henrico", "Frederick,Winchester City", "Saint Bernard", 
                  "Monterey", "Hillsborough", "Floyd", "Cobb", "Carter", "Scott,Hennepin,Carver", 
                  "Essex,Union", "Radford,Montgomery,Pulaski", "La Paz", "Waukesha,Jefferson", 
                  "Saint Louis,Jefferson", "Duchesne", "Waukesha", "Onondaga", "Hampden", 
                  "Plaquemines", "Buffalo", "Anchorage", "Ventura", "Rowan", "Iberia", 
                  "Macomb,Wayne", "Forsyth,Guilford,Randolph,Davidson", "Polk", "Evangeline", 
                  "Dawes", "Olmsted", "Tangipahoa", "Tuscola", "Dodge,Washington", 
                  "Wyandotte", "Latah", "Washoe", "Pike", "Berkeley,Dorchester,Charleston", 
                  "Bronx", "Kern", "Arapahoe", "Natchitoches", "Anoka,Hennepin,Dakota,Ramsey,Washington", 
                  "Atlantic", "Harrisonburg City,Rockingham", "Peach", "Beauregard", 
                  "Scioto", "Utah,Salt Lake", "Fairfax,Alexandria City,Arlington,Falls Church City", 
                  "Palm Beach", "Rock Island", "Allen", "West Baton Rouge", "Christian", 
                  "Silver Bow", "Alleghany", "Fresno", "Smith", "Stark", "Dakota,Woodbury,Union", 
                  "Howell", "Luna", "Beaufort", "Uintah", "Russell", "Wapello", "Scotland", 
                  "New York", "Canadian", "Wasatch", "Davis", "Iron", "Kootenai", "Morgan", 
                  "Green", "Jo Daviess", "Wilson", "Kittitas", "Grant", "Hall", "Placer", 
                  "Paulding", "Johnson,Jackson,Wyandotte", "Carteret", "Westmoreland,Armstrong", 
                  "Spokane", "Garfield", "Oklahoma", "Dane", "Merced", "Bernalillo", 
                  "Pitkin", "Pitt", "Putnam", "Routt", "San Bernardino", "Manitowoc", 
                  "Mille Lacs", "Sheboygan", "Chittenden", "Newton", "Carroll", 
                  "San Francisco", "Thurston", "Mchenry", "Pennington", "Durham", 
                  "Mono", "Bartholomew", "Kennebec", "Hood River", "Allegan", 
                  "Saint Louis,Saint Charles", "Doddridge", "El Dorado,Nevada,Placer", 
                  "New London", "Manistee", "Saint Charles", "Cumberland,Oxford,Belknap,Carroll", 
                  "Macoupin", "Teton", "Freeborn", "Clinton", "Ashtabula", "San Joaquin", 
                  "Dubois", "Delta", "Cuyahoga", "San Mateo", "Orange,Seminole", 
                  "Midland", "Dona Ana", "Sandoval", "Lackawanna", "Essex,Hudson,Union,Passaic,Bergen", 
                  "Blue Earth", "Norfolk City", "Worcester", "Ventura,Los Angeles", 
                  "Whiteside", "Dodge", "Effingham", "Colbert", "Bureau", "Kanabec", 
                  "Yates", "Galveston", "Sutter", "Stanton,Madison", "Marlboro", 
                  "Box Elder", "Iosco", "Lewis", "Chenango", "Lexington", "Volusia", 
                  "Kandiyohi", "Trumbull", "Whitman", "Muscogee,Chattahoochee", 
                  "Blue Earth,Nicollet", "Laclede", "Cherokee", "Frederick", 
                  "Orange,Pinellas", "Cortland", "Hocking", "Garrett", "San Benito", 
                  "Defiance", "Wichita", "Holt", "Wasco", "Tillamook", "Wood", 
                  "Fayette", "Linn", "Passaic", "Alamosa", "Audrain", "Broome", 
                  "Schuyler", "Henrico,Richmond City,Goochland", "Lehigh", "Barry", 
                  "Tioga", "Herkimer", "Mesa", "Dakota", "Anderson", "Albemarle,Charlottesville City", 
                  "Lafourche", "Bossier", "Lenawee", "Clarke", "Crawford", "Portage,Summit", 
                  "Piscataquis", "Del Norte", "Buchanan", "Mcdowell", "Chester", 
                  "Cumberland,Prince Edward", "Sagadahoc", "Stephenson", "Red River", 
                  "Horry,Columbus", "Kankakee", "Kaufman,Collin,Dallas", "Belmont", 
                  "Gregg", "Marathon,Wood", "Athens", "Taylor", "Scott,Cape Girardeau", 
                  "Gogebic", "Greene,Christian", "Maui", "Saint Louis,Saint Louis City", 
                  "Richland,Lexington", "Harrison", "Chisago", "Barry,Lawrence", 
                  "Northampton,Bucks", "Yolo", "Petersburg City", "Williams", 
                  "Tooele", "Santa Cruz,Monterey", "Gallatin", "Hampton City,Newport News City,York,Gloucester,Mathews,Poquoson City", 
                  "Middlesex", "Humboldt", "Rice,Dakota", "Stafford,Prince William", 
                  "Santa Fe", "Scott,Hennepin,Dakota", "Scotts Bluff", "Steuben", 
                  "Saline", "Androscoggin", "Pueblo", "Tuscarawas", "Saint Croix,Pierce", 
                  "Nevada", "Mackinac", "Brazos", "Saint Croix", "Swain,Jackson", 
                  "Worcester,Providence,Norfolk", "Walla Walla", "Medina", "Sacramento", 
                  "Barbour", "Fairbanks North Star", "Escambia", "Watauga", "Denver", 
                  "Scott", "Sarpy,Douglas", "Cleveland", "Prince William,Fairfax", 
                  "Coshocton", "Randall,Potter", "Muskingum", "Clatsop", "Chippewa,Eau Claire", 
                  "Suffolk,Middlesex,Worcester,Plymouth,Norfolk", "Cattaraugus", 
                  "San Miguel", "Kenton", "Essex,Hudson,Passaic,Bergen", "Darke", 
                  "Pleasants", "Will", "Howard", "Seminole", "Coos", "Mercer,Trumbull", 
                  "Saint Johns", "Gwinnett", "Oakland,Macomb", "Chaves", "Hays", 
                  "Beadle", "Baraga", "Camden", "Malheur", "Indiana", "Morrison", 
                  "Prince William,Fairfax,Fauquier,Loudoun,Fairfax City,Manassas City,Manassas Park City", 
                  "Kosciusko", "Calcasieu", "Hancock", "Pickaway", "Adams", "Woodward", 
                  "Cayuga", "Preble", "Dougherty", "Webster", "Menominee", "Ashland", 
                  "Marinette", "Cass", "Virginia Beach City,Norfolk City,Portsmouth City,Chesapeake City", 
                  "Dodge,Jefferson", "Cooke")

# Randomly sample county names
county_names <- sample(county_names, size = n_rows, replace = TRUE)

# 5. population_served (numeric variable)
# Use a log-normal distribution to better match the original data's skewness
population_served <- round(rlnorm(n_rows, meanlog = log(128734), sdlog = 1))  # Adjust parameters as needed
population_served <- pmax(population_served, 564)  # Ensure minimum value is 564

# 6. date_start and date_end (date variables)
# Use a uniform distribution for dates within the original range
date_start <- seq(as.Date("2023-01-01"), as.Date("2024-12-31"), by = "day")
date_start <- sample(date_start, size = n_rows, replace = TRUE)
date_end <- date_start + sample(1:14, size = n_rows, replace = TRUE)  # Assuming 1-14 days difference

# 7. ptc_15d (numeric variable)
# Use a mixture distribution to account for the extreme values
ptc_15d <- ifelse(runif(n_rows) < 0.95, 
                  rnorm(n_rows, mean = 0, sd = 100),  # Most values are around 0
                  runif(n_rows, min = 1e6, max = 2147483647))  # Some extreme values
ptc_15d <- pmax(ptc_15d, -100)  # Ensure minimum value is -100

# 8. detect_prop_15d (numeric variable)
# Use a discrete distribution to match the original data's values
detect_prop_15d <- sample(c(0, 50, 67, 80, 100), size = n_rows, replace = TRUE, 
                          prob = c(0.1, 0.2, 0.2, 0.2, 0.3))  # Adjust probabilities as needed

# 9. percentile (numeric variable)
# Use a uniform distribution between 0 and 100
percentile <- runif(n_rows, min = 0, max = 100)

# 10. sampling_prior (categorical variable)
# Use the same proportions as in the original data
sampling_prior <- sample(c("no", "yes"), size = n_rows, replace = TRUE, prob = c(0.85, 0.15))  # Adjust probabilities as needed

# 11. first_sample_date (date variable)
# Use a uniform distribution for dates within the original range
first_sample_date <- seq(as.Date("2020-07-05"), as.Date("2025-01-14"), by = "day")
first_sample_date <- sample(first_sample_date, size = n_rows, replace = TRUE)

# Combine all variables into a synthetic dataset
synthetic_data <- data.frame(
  wwtp_jurisdiction,
  wwtp_id,
  sample_location,
  county_names,
  population_served,
  date_start,
  date_end,
  ptc_15d,
  detect_prop_15d,
  percentile,
  sampling_prior,
  first_sample_date
)

# View the first few rows of the synthetic dataset
head(synthetic_data)

# Check the distributions of key variables
summary(synthetic_data$population_served)
summary(synthetic_data$ptc_15d)
summary(synthetic_data$detect_prop_15d)
summary(synthetic_data$percentile)

```

```{r}
ggplot(synthetic_data, aes(x = population_served)) +
  geom_histogram(binwidth = 1000, fill = "blue", color = "blue") +
  labs(title = "Distribution of Population Served", x = "Population Served", y = "Frequency")

ggplot(synthetic_data, aes(x = ptc_15d)) +
  geom_histogram(fill = "green", color = "green") +
  xlim(-100, 100) +
  labs(title = "Distribution of PTC 15d", x = "PTC 15d", y = "Frequency")

ggplot(synthetic_data, aes(x = detect_prop_15d)) +
  geom_histogram(binwidth = 10, fill = "red", color = "red") +
  labs(title = "Distribution of Detect Prop 15d", x = "Detect Prop 15d", y = "Frequency")

ggplot(synthetic_data, aes(x = percentile)) +
  geom_histogram(binwidth = 5, fill = "purple", color = "purple") +
  labs(title = "Distribution of Percentile", x = "Percentile", y = "Frequency")

```

```{r}
#Plot distributions of categorical variables
ggplot(df, aes(x = wwtp_jurisdiction)) +
  geom_bar(fill = "blue") +
  theme(axis.text.x = element_text(angle = 60, hjust = 1)) +
  labs(title = "Distribution of wwtp_jurisdiction",
       x = "wwtp_jurisdiction",
       y = "count")

ggplot(filter(df, wwtp_jurisdiction == "Georgia"), aes(x = county_names)) +
  geom_bar(fill = "green") +
  theme(axis.text.x = element_text(angle = 60, hjust = 1)) +
  labs(title = "Distribution of counties in Georgia",
       x = "counties",
       y = "count")

ggplot(df, aes(x = sample_location)) +
  geom_bar(fill = "red") +
  theme(axis.text.x = element_text(angle = 0.5, hjust = 0.5)) +
  labs(title = "Distribution of sample_location",
       x = "sample location",
       y = "count")

ggplot(df, aes(x = sampling_prior)) +
  geom_bar(fill = "purple") +
  theme(axis.text.x = element_text(angle = 0.5, hjust = 0.5)) +
  labs(title = "Distribution of sampling_prior",
       x = "prior sampling",
       y = "count")
```

##### I had some trouble entering all the county names and I'm not even 100% sure If I had to do all of that? I got rid of the county_fips variable because it wasn't used in any of the analysis. Two of the graphs do not really mimic the original data well but I am not sure where I went wrong so if you have any insight I'm all ears! I used DeepSeek to help me!
