---
title: "cdc-data-exercise"
editor: visual
---

```{r}
#Load required packages
library(tidyverse)
library(here)
library(ggplot2)
library(janitor)
```

```{r}
#Load dataset
data_path <- here("cdc-data-exercise", "BEAM_Dashboard_-_Report_Data_20250205.csv")
cdc_data <- read_csv(data_path)

```

```{r}
#Data cleaning

cdc_data <- cdc_data %>%
  clean_names() %>% #Clean column names
  filter(pathogen == "Salmonella") %>% #Filter for just Salmonella
  mutate(across(c(state, source, pathogen, serotype_species, year, month), as.factor)) %>% #Convert variables to factors
  filter(!is.na(state)) %>% #Remove NAs from 'state'
  mutate(across(where(is.numeric), ~replace_na(., 0))) #Replace all NAs in numeric variables with 0

summary(cdc_data)
```

```{r}
#Summary statistics for numerical variables
summary_stats <- cdc_data %>%
  summarise(across(where(is.numeric), list(mean = ~ mean(.), 
                                           sd = ~ sd(.), 
                                           min = ~ min(.), 
                                           max = ~ max(.), 
                                           median = ~ median(.)
                                           ), .names = "{col}_{fn}"))

#Reshape summary statistics to a table format
summary_stats_table <- summary_stats %>%
  pivot_longer(cols = everything(), names_to = "variable_stat", values_to = "value") %>%
  separate(variable_stat, into = c("variable", "stat"), sep = "_(?=[^_]+$)")

#Spread statistics into columns
summary_stats_table <- summary_stats_table %>%
  pivot_wider(names_from = stat, values_from = value)

print(summary_stats_table)

# Save summary statistics as CSV
write.csv(summary_stats, "summary_statistics.csv", row.names = FALSE)

# Distribution plots for numerical variables
num_vars <- names(cdc_data)[sapply(cdc_data, is.numeric)]
for (var in num_vars) {
  ggplot(cdc_data, aes(var)) +
    geom_histogram(bins = 30, fill = "steelblue", alpha = 0.7) +
    geom_density(aes(y = after_stat(density) * max(after_stat(count))), color = "red", linewidth = 1) +
    ggtitle(paste("Distribution of ", var)) +
    theme_minimal() +
    ggsave(paste("distribution_", var, ".png"))
}

# Frequency tables for categorical variables
cat_vars <- names(data)[sapply(data, is.factor)]
for (var in cat_vars) {
  cat_table <- data %>%
    count(!!sym(var)) %>%
    mutate(percentage = n / sum(n) * 100)
  print(cat_table)
  
  # Save categorical summaries as CSV
  write.csv(cat_table, paste0("summary_", var, ".csv"), row.names = FALSE)
  
  # Bar plot
  ggplot(cat_table, aes_string(x = var, y = "percentage", fill = var)) +
    geom_bar(stat = "identity") +
    theme_minimal() +
    ggtitle(paste("Proportion of", var)) +
    theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
    ggsave(paste0("barplot_", var, ".png"))
}

# Correlation matrix for numerical variables
cor_matrix <- cor(data %>% select(where(is.numeric)), use = "pairwise.complete.obs")
print(cor_matrix)

# Save correlation matrix as CSV
write.csv(cor_matrix, "correlation_matrix.csv", row.names = TRUE)

# Heatmap of correlations
library(ggcorrplot)
ggcorrplot(cor_matrix, hc.order = TRUE, type = "lower", lab = TRUE) +
  ggtitle("Correlation Heatmap") +
  ggsave("correlation_heatmap.png")

```
